"""
Django settings for final_pjt project.

Generated by "django-admin startproject" using Django 4.2.8.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / "subdir".
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = "django-insecure-i0u3azdr+1cp=_a=)zi*bc^m35wd^0a*q+8nqcoiraa*i0x-8x"

# SECURITY WARNING: don"t run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "music_rec_app",
    "static_app",
    "accounts",
    "bootstrap5",
    "spotify",
    "googlesearch",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "final_pjt.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "final_pjt.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# DATABASES = {
#     'logdb': {
    #     'ENGINE': 'djongo',
    #     'ENFORCE_SCHEMA': False,
    #     'LOGGING': {
    #         'version': 1,
    #         'loggers': {
    #             'djongo': {
    #                 'level': 'DEBUG',
    #                 'propogate': False,                        
    #             }
    #         },
    #      },
    #     'NAME': 4.5HZ,
    #     'CLIENT': {
    #         'host': ec2-15-152-244-178.ap-northeast-3.compute.amazonaws.com,
    #         'port': 27017,
    #         'username': 4.5HZ,
    #         'password': 12345,
    #         'authSource': 'admin',
    #         'authMechanism': 'SCRAM-SHA-1'
    #     },
    # }
# }

import my_settings
DATABASES = my_settings.DATABASES
SECRET_KEY = my_settings.SECRET_KEY


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

# LANGUAGE_CODE = "en-us" 
LANGUAGE_CODE = "ko-kr"

# TIME_ZONE = "UTC"

TIME_ZONE = "Asia/Seoul"

# USE_I18N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

# STATIC_URL = "/static/"
STATIC_URL = "static/"
STATICFILES_DIRS = [os.path.join(BASE_DIR, "static")]

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

AUTH_USER_MODEL = "accounts.User"


LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,  # 기본 로깅 구성을 유지하고 확장한다는 의미
    
    # log가 저장되는 텍스트의 포맷 형식을 정의
    "formatters": {
        
        "user_click": {
            "format": "{levelname},{asctime},{user_id},{gender},{username},{birth_date},{message}",
            "datefmt": "%Y-%m-%d %H:%M:%S",
            "style": "{",
        },
        "json": {
            "()" : "final_pjt.logs.JSONFormatter", # "json_log_formatter.JSONFormatter"
        },
    },
    
    # DEBUG 수준 이상의 로그를 log_test.log에 저장
    "handlers": {
        "user_action": {
            "class": "logging.FileHandler", # FileHandler 사용
            "filename": "logs/log_test.json", # 파일명을 log_test.log로 저장
            "encoding": "utf-8",
            "formatter": "json",
            "level": "DEBUG",   # log 수준은 DEBUG 이상
            # "maxBytes": 1024*1024*5,
            # "backupCount": 5,
        },
        # "kafka": {
        #     "class": "kafka.logging.KafkaHandler",
        #     # "host": "172.31.15.209:9092",  # Kafka Broker 주소 및 포트
        #     "topic": "log_topic",  # Kafka Topic 이름
        #     # "method": "POST",
        #     # "formatter": "json",
        #     "level": "DEBUG",
        # },
    },
    
    # 로거, 로그 레코드 저장소
    "loggers": {
        
        "onclick": {
            "handlers": ["user_action"],  # , "kafka"
            "level": "DEBUG",
            "propagate": False,
            
        },
        
        # "log_kafka":{
        #     "handlers": ["kafka"],
        #     "level": "DEBUG",
        #     "propagate": False,
        # },
    },
}

# KAFKA_BOOTSTRAP_SERVERS = ["172.31.15.209:9092"]
# KAFKA_TOPIC = "log_topic"

# # index 페이지 배경 동영상
# STATIC_URL = "/static/"
# STATIC_ROOT = os.path.join(BASE_DIR, "static")
